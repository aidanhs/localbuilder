#!/bin/bash
set -o errexit
set -o nounset
set -o pipefail

help() {
    echo "Invalid command: choose one of 'upd' 'updfrom'"
}

if [ "$#" -lt 1 ]; then
    help
    exit 1
fi

if [ "$1" = upd ]; then

    echo "About to update the box, pausing 5s"
    sleep 5
    cd $(mktemp -d)
    wget https://aidanhs.com/local.tar.gz
    rm -rf ~/local
    tar -C ~ -xf local.tar.gz
    rm local.tar.gz
    boxtool _postupdate

elif [ "$1" = updfrom ]; then

    shift
    if [ "$#" != 1 ]; then
        echo "Need a tar to update from"
    fi
    rm -rf ~/local
    tar -C ~ -xf "$1"
    boxtool _postupdate

elif [ "$1" = _postupdate ]; then

    # INTERNAL FUNCTION - DO NOT CALL

    echo
    echo "> CLEANUP"

    if [ -e ~/.config/autostart/dropbox.desktop -o -e ~/.dropbox -o -e ~/Dropbox ]; then
        rm -f ~/.config/autostart/dropbox.desktop
        echo "Please run the following to clean up dropbox"
        echo "rm -r ~/.dropbox*"
        echo "rm -r ~/Dropbox"
        sleep 15
    fi
    if [ -e ~/.config/autostart/syncthing-start.desktop ]; then
        rm -f ~/.config/autostart/syncthing-start.desktop
    fi

    echo
    echo "> INSTALL/REPLACE"

    echo "Setting up homeshick"
    if [ ! -d ~/.homesick ]; then
        git clone https://github.com/andsens/homeshick.git ~/.homesick/repos/homeshick
        # --batch will *not* auto symlink
        ~/.homesick/repos/homeshick/bin/homeshick --batch clone git@bitbucket.org:aidanhs/dotfiles.git
        ~/.homesick/repos/homeshick/bin/homeshick symlink
        chmod 600 ~/.homesick/repos/dotfiles/home/.ssh/config
    fi
    ~/.homesick/repos/homeshick/bin/homeshick pull
    ~/.homesick/repos/homeshick/bin/homeshick symlink

    echo "Setting up tmux"
    # Note: bash -i picks up bashrc from above so we can get tmux
    if [ ! -d ~/.tmux/plugins/tpm ]; then
        git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
        bash -i ~/.tmux/plugins/tpm/bin/install_plugins
    fi
    bash -i ~/.tmux/plugins/tpm/bin/update_plugins all

    echo "Setting up nvim"
    ~/local/bin/nvim --headless -c ':PlugInstall' -c ':qa'

    echo "Deleting existing systemd units"
    if [ -d ~/.config/systemd/user ]; then
        for f in ~/.config/systemd/user/*.service; do
            systemctl --user disable $(basename $f)
        done
        rm -r ~/.config/systemd/user
    fi
    echo "Registering new systemd units"
    mkdir -p ~/.config/systemd/user
    if [ -d ~/local/etc/systemd ]; then
        cp ~/local/etc/systemd/* ~/.config/systemd/user/
    fi
    for f in ~/.config/systemd/user/*.service; do
        systemctl --user enable $(basename $f)
        systemctl --user start $(basename $f)
    done

    echo "Make sure to log in and log out to pick up any bashrc changes!"
    echo "If this a first time setup, log out and in, and run 'syncthing serve --browser-only'"

else

    help
    exit 1

fi
